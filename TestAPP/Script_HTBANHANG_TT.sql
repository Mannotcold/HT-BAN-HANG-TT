CREATE DATABASE HT_BANHANGTT
go
use HT_BANHANGTT
CREATE TABLE QUANTRI
(
   MAQT char(10) NOT NULL,
   TEN_TK char(40) NOT NULL,
   HOTEN_QT nvarchar(50),
   SDT_QT varchar(13) ,
   DIACHI_QT nvarchar(50),
   PRIMARY KEY (MAQT)
);
CREATE TABLE TAIKHOAN
(
   TEN_TK char(40) NOT NULL,
   MATKHAU char(30),
   LOAI_TK char(2) not null,
   TRANGTHAI char(5),
   PRIMARY KEY (TEN_TK)
);
ALTER TABLE TAIKHOAN ADD CHECK (TRANGTHAI = 'TRUE' OR TRANGTHAI = 'FALSE');
CREATE TABLE DOITAC 
(
	MADT char(10) NOT NULL,
	TEN_TK char(40) NOT NULL,
	MASOTHUE char(10),
	EMAIL varchar(50),
	TENQUAN nvarchar(50),
	NGUOIDAIDIEN nvarchar(50),
	THANHPHO nvarchar(50),
	QUAN nvarchar(50),
	LOAIAMTHUC nvarchar(50),
	DIACHIKINHDOANH nvarchar(50),
	SODIENTHOAI char(10),
	SOLUONGCUAHANG char(10),
	SOLUONGDHDUKIEN char(10)
	PRIMARY KEY (MADT)
);

CREATE TABLE MONAN
(
	MAMA char(10) NOT NULL,
	TEN_SP nvarchar(50),
	GIA_SP float,
	TINHTRANGMONAN char(10),
	MACH char(10)
	PRIMARY KEY (MAMA)
);
ALTER TABLE MONAN ADD CHECK (TINHTRANGMONAN = 'Process' OR TINHTRANGMONAN = 'Noprocess')

CREATE TABLE CUAHANG
(
	MACH char(10) NOT NULL,
	MADT char(10) NOT NULL,
	DIACHI varchar(50),
	THOIGIANHOATDONG datetime,
	TINHTRANGCUAHANG varchar(50),
	PRIMARY KEY (MACH)
);
CREATE TABLE HOPDONG
(
	MAHD char(10) NOT NULL,
	MADT char(10) NOT NULL,
	MANV char(10) NOT NULL,
	NGAYLAP datetime,
	THOIGIANHIEULUC datetime,
	TAIKHOANNGANHANG varchar(20),
	PRIMARY KEY (MAHD)
);
CREATE TABLE CHINHANHNH
(
	MAHD char(10) NOT NULL,
	DIACHICH nvarchar(50),
	SOCHINHANH int,
	PRIMARY KEY (MAHD)
);

create table KHACHHANG
(
    MAKH char(10) NOT NULL,
	TEN_TK char(40) NOT NULL,
    HOTEN_KH nvarchar(30),
    DIENTHOAI_KH char(10),
    DIACHI_KH nvarchar(50),
    EMAIL varchar(30),
    PRIMARY KEY (MAKH)
);

create table DONHANG
(
    MADH char(10) NOT NULL,
    NGAYLAP datetime,
    HINHTHUCTT varchar(10),
    DIACHIGIAO nvarchar(300),
    PHISP float,
    PHIVC float,
    TONGTIEN float,
	TINHTRANG char(50),
	NGUOINHANHANG nvarchar(50),
    MAKH char(10) NOT NULL,
    MATX char(10) NOT NULL,
	MADT char(10) NOT NULL,--thêm mới
    PRIMARY KEY (MADH)
);
ALTER TABLE DONHANG ADD CHECK (TINHTRANG = 'TRUE' OR TINHTRANG = 'FALSE');

create table CT_DONHANG
(
	MAMA char(10) NOT NULL,
	MADH char(10) NOT NULL,
	THANHTIEN float,
	SOLUONG int
	PRIMARY KEY (MAMA, MADH)
)
create table THANHTOAN
(
	MATT char(10) NOT NULL,
	PHUONGTHUCTHANHTOAN char(10),
	TRANGTHAI varchar(50),
	MADH char(10) NOT NULL,
)
ALTER TABLE THANHTOAN ADD CHECK (PHUONGTHUCTHANHTOAN = 'MOMO' OR PHUONGTHUCTHANHTOAN = 'Cash' OR PHUONGTHUCTHANHTOAN = 'Zalopay')
ALTER TABLE THANHTOAN ADD CHECK (TRANGTHAI = 'TRUE' OR TRANGTHAI = 'FALSE');

CREATE TABLE NHANVIEN
(
    MANV char(10) NOT NULL,
	TEN_TK char(40) NOT NULL,
    HOTEN_NV nvarchar(30),
    DIENTHOAI_NV char(10),
    DIACHI_NV varchar(30),
    EMAIL varchar(20)
    PRIMARY KEY (MANV)
);
CREATE TABLE TAIXE
(
    MATX char(10) NOT NULL,
	TEN_TK char(40) NOT NULL,
    HOTEN_TX nvarchar(30),
    DIENTHOAI_TX char(10),
    DIACHI_TX varchar(30),
    EMAIL varchar(20),
    BIENSOXE varchar(5),
    TAIKHOANNGANHANG varchar(15),
    KHUVUCHOATDONG varchar(40),
    PRIMARY KEY (MATX)
);
CREATE TABLE PHANHOI
(
	MAPH char(10) NOT NULL,
	MAKH char(10) NOT NULL,
	MAMA char(10) NOT NULL,
	DANHGIA CHAR(7), -- LIKE OR DISLIKE
	PRIMARY KEY(MAPH)
);
ALTER TABLE PHANHOI ADD CHECK (DANHGIA = 'LIKE' OR DANHGIA = 'DISLIKE')
--QUANTRI-TAIKHOAN
ALTER TABLE QUANTRI
ADD CONSTRAINT FK_QUANTRI_TAIKHOAN
FOREIGN KEY (TEN_TK)
REFERENCES TAIKHOAN(TEN_TK);
--KHACHHANG-TAIKHOAN
ALTER TABLE KHACHHANG
ADD CONSTRAINT FK_KHACHHANG_TAIKHOAN
FOREIGN KEY (TEN_TK)
REFERENCES TAIKHOAN(TEN_TK);
--DOITAC-TAIKHOAN
ALTER TABLE DOITAC
ADD CONSTRAINT FK_DOITAC_TAIKHOAN
FOREIGN KEY (TEN_TK)
REFERENCES TAIKHOAN(TEN_TK);
--NHANVIEN-TAIKHOAN
ALTER TABLE NHANVIEN
ADD CONSTRAINT FK_NHANVIEN_TAIKHOAN
FOREIGN KEY (TEN_TK)
REFERENCES TAIKHOAN(TEN_TK);

--TAIXE-TAIKHOAN
ALTER TABLE TAIXE
ADD CONSTRAINT FK_TAIXE_TAIKHOAN
FOREIGN KEY (TEN_TK)
REFERENCES TAIKHOAN(TEN_TK);
----DONHANG-TAIXE
--ALTER TABLE DONHANG
--ADD CONSTRAINT FK_DONHANG_TAIXE
--FOREIGN KEY (MATX)
--REFERENCES TAIXE(MATX);
--DONHANG-KHACHHANG
ALTER TABLE DONHANG
ADD CONSTRAINT FK_DONHANG_KHACHHANG
FOREIGN KEY (MAKH)
REFERENCES KHACHHANG(MAKH);
--CT_DONHANG-DONHANG
ALTER TABLE CT_DONHANG
ADD CONSTRAINT FK_CT_DONHANG_DONHANG
FOREIGN KEY (MADH)
REFERENCES DONHANG(MADH);
--CT_DONHANG-MONAN
ALTER TABLE CT_DONHANG
ADD CONSTRAINT FK_CT_DONHANG_MONAN
FOREIGN KEY (MAMA)
REFERENCES MONAN(MAMA);
--CUAHANG-DOITAC
ALTER TABLE CUAHANG
ADD CONSTRAINT FK_CUAHANG_DOITAC
FOREIGN KEY (MADT)
REFERENCES DOITAC(MADT);
--HOPDONG-DOITAC
ALTER TABLE HOPDONG
ADD CONSTRAINT FK_HOPDONG_DOITAC
FOREIGN KEY (MADT)
REFERENCES DOITAC(MADT);
--THUCDON-MONAN
ALTER TABLE THUCDON
ADD CONSTRAINT FK_THUCDON_MONAN
FOREIGN KEY (MAMA)
REFERENCES MONAN(MAMA);
--HOPDONG-NHANVIEN
ALTER TABLE HOPDONG
ADD CONSTRAINT FK_HOPDONG_NHANVIEN
FOREIGN KEY (MANV)
REFERENCES NHANVIEN(MANV);
--CHINHANHNH-HOPDONG
ALTER TABLE CHINHANHNH
ADD CONSTRAINT FK_CHINHANHNH_HOPDONG
FOREIGN KEY (MAHD)
REFERENCES HOPDONG(MAHD);
--PHANHOI-KHACHHANG
ALTER TABLE PHANHOI
ADD CONSTRAINT FK_PHANHOI_KHACHHANG
FOREIGN KEY (MAKH)
REFERENCES KHACHHANG(MAKH);
--PHANHOI-MONAN
ALTER TABLE PHANHOI
ADD CONSTRAINT FK_PHANHOI_MONAN
FOREIGN KEY (MAMA)
REFERENCES MONAN(MAMA);
--Thêm mới
--DONHANG-DOITAC
ALTER TABLE DONHANG
ADD CONSTRAINT FK_DONHANG_DOITAC
FOREIGN KEY (MADT)
REFERENCES DOITAC(MADT);

--Thêm mới
--MONAN-CUAHANG
ALTER TABLE MONAN
ADD CONSTRAINT FK_MONAN_CUAHANG
FOREIGN KEY (MACH)
REFERENCES CUAHANG(MACH);

--trigger
--Tổng tiền hóa đơn là tổng tiền các chi tiết đơn hàng	
DROP TRIGGER trigger_TongTien; 
go
create trigger trigger_TongTien		
on CT_DONHANG
for insert, delete, update	
as
begin
	update DONHANG 
	set TongTien = PHIVC + PHISP + (select sum(THANHTIEN) from CT_DONHANG
	where DONHANG.MADH= CT_DONHANG.MADH)
	where 
	exists (select * from deleted d	 where d.MADH = DONHANG.MADH) or
	exists (select * from inserted i where i.MADH = DONHANG.MADH) 
end
go

go
--Thành tiền trong chi tiết hóa đơn là giá * số lượng món
create trigger trigger_ThanhTien	
on CT_DONHANG
for insert, update, delete	as
begin
if update (SoLuong)
	if exists (select SoLuong from CT_DONHANG where SoLuong < 0) 
	begin
		raiserror (N'Số lượng sản phẩm không hợp lệ', 10, 1)
		rollback transaction
	end

	update CT_DONHANG
	set THANHTIEN = ctdh.SoLuong * (select GIA_SP from MONAN where MONAN.MAMA = ctdh.MAMA)
	from inserted i, MONAN ma, CT_DONHANG ctdh
	where 
		ma.MAMA = i.MAMA and
		ma.MAMA = ctdh.MAMA
end


ALTER TABLE TAIXE DROP FK_DONHANG_TAIXE ;